{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { combineReducers } from 'redux'; //types\n\nconst FETCH_POST = 'FETCH_POST';\nconst NEW_POST = 'NEW_POST'; //postReducer\n\nconst inititalState = {\n  items: [],\n  item: {}\n};\n\nconst postReducer = (state = inititalState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nconst middleware = [thunk];\nconst store = createStore(rootReducer, inititalState, applyMiddleware(...middleware));\n\nconst rootReducer = inititalState => {\n  return {};\n};\n\ncombineReducers({\n  posts: postReducer\n}); //exporting\n\nexport { store };","map":{"version":3,"sources":["C:\\Users\\camille\\Desktop\\Proga\\react_redux_blog\\src\\ReduxStuff.js"],"names":["createStore","applyMiddleware","thunk","combineReducers","FETCH_POST","NEW_POST","inititalState","items","item","postReducer","state","action","type","middleware","store","rootReducer","posts"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,eAAR,QAA8B,OAA9B,C,CAEA;;AACA,MAAMC,UAAU,GAAG,YAAnB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CACA;;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,KAAK,EAAC,EADY;AAElBC,EAAAA,IAAI,EAAE;AAFY,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAACJ,aAAP,EAAsBK,MAAtB,KAAiC;AACjD,UAAOA,MAAM,CAACC,IAAd;AACI;AACI,aAAOF,KAAP;AAFR;AAIH,CALD;;AASA,MAAMG,UAAU,GAAG,CAACX,KAAD,CAAnB;AAEA,MAAMY,KAAK,GAAGd,WAAW,CAACe,WAAD,EAAaT,aAAb,EAA2BL,eAAe,CAAC,GAAGY,UAAJ,CAA1C,CAAzB;;AAEA,MAAME,WAAW,GAAIT,aAAD,IAAmB;AACnC,SAAO,EAAP;AACH,CAFD;;AAIAH,eAAe,CACX;AAACa,EAAAA,KAAK,EAAEP;AAAR,CADW,CAAf,C,CAOA;;AACA,SAAQK,KAAR","sourcesContent":["import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {combineReducers} from 'redux';\r\n\r\n//types\r\nconst FETCH_POST = 'FETCH_POST';\r\nconst NEW_POST = 'NEW_POST';\r\n//postReducer\r\nconst inititalState = {\r\n    items:[],\r\n    item: {}\r\n};\r\n\r\nconst postReducer = (state=inititalState, action) => {\r\n    switch(action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer,inititalState,applyMiddleware(...middleware));\r\n\r\nconst rootReducer = (inititalState) => {\r\n    return {}\r\n}\r\n\r\ncombineReducers(\r\n    {posts: postReducer}\r\n);\r\n\r\n\r\n\r\n\r\n//exporting\r\nexport {store};"]},"metadata":{},"sourceType":"module"}